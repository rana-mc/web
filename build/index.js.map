{
  "version": 3,
  "sources": ["<stdin>", "../node_modules/@remix-run/dev/compiler/shims/react.ts", "../app/entry.server.tsx", "/Users/ebykovskikh/Desktop/web/app/root.tsx", "/Users/ebykovskikh/Desktop/web/app/routes/servers/create/api/fabricInstallers.ts", "/Users/ebykovskikh/Desktop/web/app/routes/servers/create/api/fabricLoaders.ts", "/Users/ebykovskikh/Desktop/web/app/routes/servers/create/api/createServer.ts", "/Users/ebykovskikh/Desktop/web/app/routes/servers/create/api/gameVersions.ts", "../app/constants.ts", "/Users/ebykovskikh/Desktop/web/app/routes/servers/create/api/forgeCores.ts", "/Users/ebykovskikh/Desktop/web/app/routes/servers/$id/api/remove.ts", "/Users/ebykovskikh/Desktop/web/app/routes/servers/create/index.tsx", "../app/components/CreateServerForm/index.tsx", "../app/components/FloatBottom/index.tsx", "../app/components/GameVersionSelect/index.tsx", "../app/components/SelectIcon/index.tsx", "../app/components/Icon/index.tsx", "../app/components/Layout/index.tsx", "../app/components/Sidebar/index.tsx", "../app/components/Version/index.tsx", "../app/hooks/useMediaQuery.ts", "../app/components/Logo/index.tsx", "../app/components/GithubRepo/index.tsx", "../app/components/NavHeader/index.tsx", "../app/components/ServerCoreBuilder/Fabric/index.tsx", "../app/components/ServerCoreBuilder/utils.ts", "../app/components/ServerCoreBuilder/Forge/index.tsx", "../app/components/ServerCoreBuilder/index.tsx", "../app/components/ServerCoreTypeSelect/index.tsx", "../app/components/VersionTypeSelect/index.tsx", "/Users/ebykovskikh/Desktop/web/app/routes/settings/curseforge.tsx", "/Users/ebykovskikh/Desktop/web/app/routes/servers/$id/index.tsx", "../app/components/ServerCardLarge/index.tsx", "../app/components/ServerLogs/index.tsx", "../app/vendors/ranaSocketIo.ts", "../app/components/ServerLogs/utils.ts", "../app/components/Badge/index.tsx", "/Users/ebykovskikh/Desktop/web/app/routes/settings/rana-mc.tsx", "/Users/ebykovskikh/Desktop/web/app/routes/mods/downloaded.tsx", "/Users/ebykovskikh/Desktop/web/app/routes/servers/index.tsx", "../app/components/ServerCard/index.tsx", "/Users/ebykovskikh/Desktop/web/app/routes/mods/gallery.tsx", "/Users/ebykovskikh/Desktop/web/app/routes/about.tsx", "/Users/ebykovskikh/Desktop/web/app/routes/index.tsx", "server-assets-manifest:@remix-run/dev/assets-manifest", "server-entry-module:@remix-run/dev/server-build"],
  "sourcesContent": ["export * from \"@remix-run/dev/server-build\";", "// eslint-disable-next-line import/no-extraneous-dependencies\nimport * as React from \"react\";\nexport { React };\n", "import { renderToString } from 'react-dom/server';\nimport { RemixServer } from '@remix-run/react';\nimport type { EntryContext } from '@remix-run/react';\n\nexport default function handleRequest(\n  request: Request,\n  responseStatusCode: number,\n  responseHeaders: Headers,\n  remixContext: EntryContext\n) {\n  const markup = renderToString(<RemixServer context={remixContext} url={request.url} />);\n\n  responseHeaders.set('Content-Type', 'text/html');\n\n  return new Response('<!DOCTYPE html>' + markup, {\n    status: responseStatusCode,\n    headers: responseHeaders,\n  });\n}\n", "import React from 'react';\nimport {\n  Links,\n  LiveReload,\n  Meta,\n  Outlet,\n  Scripts,\n  ScrollRestoration,\n  useCatch,\n  useNavigate,\n} from '@remix-run/react';\nimport type { LinksFunction, MetaFunction } from '@remix-run/server-runtime';\n\n// TODO: Replace by BackToHome component\nimport { Button } from 'rsuite';\n\nimport globalStyles from './styles/global.css';\n\nexport const meta: MetaFunction = () => ({ title: 'RanaMC' });\n\nconst App = () => (\n  <html lang=\"en\">\n    <head>\n      <meta charSet=\"utf-8\" />\n      <meta name=\"viewport\" content=\"width=device-width,initial-scale=1\" />\n      <Meta />\n      <Links />\n    </head>\n    <body>\n      <React.StrictMode>\n        <Outlet />\n      </React.StrictMode>\n      <ScrollRestoration />\n      <Scripts />\n      {process.env.NODE_ENV === 'development' && <LiveReload />}\n    </body>\n  </html>\n);\n\nexport const CatchBoundary = () => {\n  const navigate = useNavigate();\n  const caught = useCatch();\n\n  const handleGoBack = () => {\n    navigate('../');\n  };\n\n  return (\n    <html lang=\"en\">\n      <head>\n        <title>Oops!</title>\n        <Meta />\n        <Links />\n      </head>\n      <body className=\"not-found\">\n        <h1>\n          {caught.status} {caught.statusText}\n        </h1>\n        <Button appearance=\"primary\" onClick={handleGoBack}>\n          Go Home\n        </Button>\n        <Scripts />\n      </body>\n    </html>\n  );\n};\n\nexport const links: LinksFunction = () => [\n  { rel: 'stylesheet', href: globalStyles },\n  { rel: 'preconnect', href: 'https://fonts.googleapis.com' },\n  {\n    rel: 'preconnect',\n    href: 'https://fonts.gstatic.com',\n    crossOrigin: 'use-credentials',\n  },\n  {\n    rel: 'stylesheet',\n    // eslint-disable-next-line max-len\n    href: 'https://fonts.googleapis.com/css2?family=Inter:wght@300;400;600;700&display=swap',\n  },\n];\n\nexport default App;\n", "import axios from 'axios';\nimport { ActionFunction, redirect } from '@remix-run/server-runtime';\n\nexport const loader = () => {\n  return redirect('/');\n};\n\nexport const action: ActionFunction = async () => {\n  try {\n    const response = await axios.get('http://localhost:3001/api/fabric-installers');\n    return { success: true, data: response.data };\n  } catch (err) {\n    return { success: false };\n  }\n};\n", "import axios from 'axios';\nimport { ActionFunction, redirect } from '@remix-run/server-runtime';\n\nexport const loader = () => {\n  return redirect('/');\n};\n\nexport const action: ActionFunction = async () => {\n  try {\n    const response = await axios.get('http://localhost:3001/api/fabric-loaders');\n    return { success: true, data: response.data };\n  } catch (err) {\n    return { success: false };\n  }\n};\n", "import axios from 'axios';\nimport { ActionFunction, redirect } from '@remix-run/server-runtime';\n\nexport const loader = () => {\n  return redirect('/');\n};\n\nexport const action: ActionFunction = async ({ request }) => {\n  const body = await request.formData();\n  const data = Object.fromEntries(body);\n\n  // FYI: Waiting server create\n  await axios.post('http://localhost:3001/api/servers', data);\n\n  // TODO: Handle create error?\n\n  return redirect(`/servers/${data.id}`);\n};\n", "import axios from 'axios';\nimport { json, redirect } from '@remix-run/server-runtime';\nimport { RESTRICTED_TYPE_IDS } from '~/constants';\n\nexport const loader = () => {\n  return redirect('/');\n};\n\n// TODO: Move into utils?\nconst filterGameVersions = (gameVersions: GameVersion[]) => {\n  return gameVersions.filter((el) => !RESTRICTED_TYPE_IDS.includes(el.type));\n};\n\nconst fetchGameVersions = async () => {\n  const response = await axios.get('http://localhost:3001/api/versions');\n  return filterGameVersions(response.data);\n};\n\nexport const action = async () => {\n  return await fetchGameVersions();\n};\n", "export const MOBILE_QUREY = '(max-width: 641px)';\n\nexport const RESTRICTED_TYPES = {\n  Java: 2,\n  Fabric: 73247,\n  Forge: 3,\n  Addons: 615,\n  Bukkit: 1,\n  Modloader: 68441,\n  'Minecraft Beta': 17,\n};\n\nexport const RESTRICTED_TYPE_IDS = Object.values(RESTRICTED_TYPES);\nexport const RESTRICTED_TYPE_NAMES = Object.keys(RESTRICTED_TYPES);\n", "import axios from 'axios';\nimport { ActionFunction, redirect } from '@remix-run/server-runtime';\n\nexport const loader = () => {\n  return redirect('/');\n};\n\nexport const action: ActionFunction = async ({ request }) => {\n  const body = await request.formData();\n  const data = Object.fromEntries(body);\n  const { version } = data;\n\n  try {\n    const response = await axios.get('http://localhost:3001/api/forge-cores', {\n      params: { version },\n    });\n    return { success: true, data: response.data };\n  } catch (err) {\n    return { success: false };\n  }\n};\n", "import axios from 'axios';\nimport { ActionFunction, redirect } from '@remix-run/server-runtime';\n\nexport const loader = () => {\n  return redirect('/');\n};\n\nexport const action: ActionFunction = async ({ params }) => {\n  const { id } = params;\n\n  // FYI: Waiting server create\n  await axios.delete(`http://localhost:3001/api/servers/${id}`);\n\n  // TODO: Handle create error?\n\n  return redirect(`/servers`);\n};\n", "import axios from 'axios';\nimport { useMemo, useState } from 'react';\nimport { useFetcher, useLoaderData, useSubmit } from '@remix-run/react';\nimport { Panel } from 'rsuite';\nimport CreateServerForm, { CreateServerFormData } from '~/components/CreateServerForm';\nimport FloatBottom, { links as floatBottomLinks } from '~/components/FloatBottom';\nimport GameVersionSelect, {\n  links as gameVersionSelectLinks,\n} from '~/components/GameVersionSelect';\nimport Layout, { links as layoutLinks } from '~/components/Layout';\nimport ServerCoreBuilder, {\n  links as serverCoreBuilderLinks,\n} from '~/components/ServerCoreBuilder';\nimport ServerCoreTypeSelect, {\n  links as serverCoreTypeSelectLinks,\n} from '~/components/ServerCoreTypeSelect';\nimport VersionTypeSelect, {\n  links as versionTypeSelectLinks,\n} from '~/components/VersionTypeSelect';\n\nexport type CreateServerContext = {\n  gameVersionId?: string;\n  serverCore?: ServerCore;\n  setServerCore: (serverCore: ServerCore) => void;\n};\n\nexport const meta = () => ({ title: 'RanaMC | Servers' });\n\n// TODO: Maybe move into api?\nexport const loader = async () => {\n  const response = await axios.get('http://localhost:3001/api/version-types');\n  return response.data;\n};\n\nconst findGameVersionByVersionTypeId = (\n  gameVersions: GameVersion[] = [],\n  versionTypeId: number = -1\n) => gameVersions?.find((el) => el.type === versionTypeId);\n\nconst CreateIndexRoute = () => {\n  const submit = useSubmit();\n\n  const [versionTypeId, setVersionTypeId] = useState<number>();\n  const [gameVersionId, setGameVersionId] = useState<string>();\n  const [serverCoreTypeId, setServerCoreTypeId] = useState<string>();\n  const [serverCore, setServerCore] = useState<ServerCore>();\n\n  const versionTypes = useLoaderData<VersionType[]>();\n  const gameVersions = useFetcher<GameVersion[]>();\n\n  const handleVersionTypeIdChange = (value: number) => {\n    setVersionTypeId(value);\n\n    gameVersions.submit(\n      { version: value.toString() },\n      { method: 'post', action: '/servers/create/api/gameVersions' }\n    );\n  };\n\n  const handleGameVersionIdChange = (value: string) => {\n    setGameVersionId(value);\n  };\n\n  const handleServerCoreTypeIdChange = (value: string) => {\n    setServerCoreTypeId(value);\n  };\n\n  const handleServerCoreBuild = (value: ServerCore) => {\n    setServerCore(value);\n  };\n\n  const handleCreateServerFormSubmit = (value: CreateServerFormData) => {\n    const { id, name } = value;\n\n    // TODO: Make it better\n    if (id && name && gameVersionId && versionTypeId && serverCore) {\n      const data: CreateServerRequestData = {\n        id,\n        name,\n        gameVersionId,\n        versionTypeId,\n        coreType: serverCore.type,\n      };\n\n      if (serverCore.type === 'forge') {\n        const forgeCore = serverCore as ForgeCore;\n\n        // FYI: Support link of Forge, open in new window\n        if (forgeCore?.installerUrl) {\n          window.open(forgeCore?.installerUrl, '_blank', 'noopener,noreferrer');\n        }\n\n        data.coreVersion = forgeCore.coreVersion;\n      }\n\n      if (serverCore.type === 'fabric') {\n        const fabricCore = serverCore as FabricCore;\n\n        data.installerVersion = fabricCore.installer.version;\n        data.loaderVersion = fabricCore.loader.version;\n      }\n\n      submit(data as Record<string, any>, {\n        method: 'post',\n        action: 'servers/create/api/createServer',\n      });\n    }\n  };\n\n  const gameVersion = useMemo(\n    () => findGameVersionByVersionTypeId(gameVersions.data, versionTypeId),\n    [versionTypeId, gameVersions]\n  );\n\n  return (\n    <Layout pageTitle=\"Create Server\" path={['Home', 'Servers']}>\n      <Panel\n        style={{ backgroundColor: '#fff', marginBottom: 32 }}\n        header={<h4 style={{ fontWeight: 600 }}>Game Version</h4>}\n        bordered>\n        <VersionTypeSelect\n          defaultValue={versionTypeId}\n          versionTypes={versionTypes}\n          onChange={handleVersionTypeIdChange}\n        />\n        {gameVersion && (\n          <GameVersionSelect\n            gameVersion={gameVersion}\n            onChange={handleGameVersionIdChange}\n          />\n        )}\n      </Panel>\n      <Panel\n        style={{ backgroundColor: '#fff', marginBottom: 32 }}\n        header={<h4 style={{ fontWeight: 600 }}>Server Type</h4>}\n        bordered>\n        <ServerCoreTypeSelect\n          defaultValue={serverCoreTypeId}\n          onChange={handleServerCoreTypeIdChange}\n        />\n      </Panel>\n      <Panel\n        style={{ backgroundColor: '#fff', marginBottom: 32 }}\n        header={<h4 style={{ fontWeight: 600 }}>Core</h4>}\n        bordered>\n        {serverCoreTypeId && (\n          <ServerCoreBuilder\n            gameVersionId={gameVersionId}\n            coreTypeId={serverCoreTypeId}\n            onBuild={handleServerCoreBuild}\n          />\n        )}\n      </Panel>\n      <FloatBottom>\n        <Panel style={{ backgroundColor: '#F5F5F5' }} bordered>\n          <CreateServerForm onSubmit={handleCreateServerFormSubmit} />\n        </Panel>\n      </FloatBottom>\n    </Layout>\n  );\n};\n\nexport const links = () => [\n  ...layoutLinks(),\n  ...floatBottomLinks(),\n  ...gameVersionSelectLinks(),\n  ...serverCoreBuilderLinks(),\n  ...serverCoreTypeSelectLinks(),\n  ...versionTypeSelectLinks(),\n];\n\nexport default CreateIndexRoute;\n", "import React, { useState } from 'react';\nimport { Form, Stack, Button } from 'rsuite';\nimport { Gear } from '@rsuite/icons';\nimport styles from './index.css';\n\nexport type CreateServerFormData = Pick<Server, 'id' | 'name'>;\n\ntype Props = {\n  onSubmit: (value: CreateServerFormData) => void;\n};\n\nconst INITIAL_FORM: Record<string, any> = {\n  id: '',\n  name: '',\n};\n\nconst CreateServerForm = ({ onSubmit }: Props) => {\n  const [formValue, setFormValue] = useState(INITIAL_FORM);\n\n  const handleSubmit = () => {\n    onSubmit(formValue as CreateServerFormData);\n  };\n\n  const handleChange = (formValue: Record<string, any>) => {\n    setFormValue(formValue);\n  };\n\n  return (\n    <Form\n      layout=\"inline\"\n      formValue={formValue}\n      onChange={handleChange}\n      className=\"createServerForm\"\n      onSubmit={handleSubmit}>\n      <Form.Group controlId=\"id\">\n        <Form.ControlLabel>\n          <Stack spacing={8}>\n            <Gear />\n            <span>Server Id</span>\n          </Stack>\n        </Form.ControlLabel>\n        <Form.Control name=\"name\" style={{ maxWidth: 196 }} />\n      </Form.Group>\n      <Form.Group controlId=\"name\">\n        <Form.ControlLabel>\n          <Stack spacing={8}>\n            <Gear />\n            <span>Server Name</span>\n          </Stack>\n        </Form.ControlLabel>\n        <Form.Control name=\"id\" autoComplete=\"off\" style={{ maxWidth: 196 }} />\n      </Form.Group>\n      <Form.Group>\n        <Button type=\"submit\" appearance=\"primary\">\n          Create Server\n        </Button>\n      </Form.Group>\n    </Form>\n  );\n};\n\nexport const links = () => [{ rel: 'stylesheet', href: styles }];\n\nexport default CreateServerForm;\n", "import React from 'react';\n\nimport styles from './index.css';\n\ntype Props = {\n  children?: React.ReactChild | React.ReactChild[];\n};\n\nconst FloatBottom = ({ children }: Props) => (\n  <div className=\"floatBottom\">{children}</div>\n);\n\nexport const links = () => [{ rel: 'stylesheet', href: styles }];\n\nexport default FloatBottom;\n", "import { Radio, Stack, RadioGroup } from 'rsuite';\nimport { ValueType } from 'rsuite/esm/Radio';\nimport SelectIcon, { links as selectIconLinks } from '../SelectIcon';\nimport styles from './index.css';\n\ntype GameVersion = { type: number; versions: string[] };\n\ntype Props = {\n  defaultValue?: string;\n  gameVersion: GameVersion;\n  onChange?: (version: string) => void;\n};\n\nconst filterVersions = (versions: string[]) =>\n  versions.filter((version) => !version.includes('Snapshot'));\n\nconst GameVersionSelect = ({ defaultValue, gameVersion, onChange }: Props) => {\n  const handleChange = (value: ValueType) => {\n    if (onChange) onChange(value as string);\n  };\n\n  return (\n    <RadioGroup\n      defaultValue={defaultValue}\n      className=\"gameVersionSelect\"\n      inline\n      name=\"gameVersionSelect\"\n      onChange={handleChange}>\n      {filterVersions(gameVersion.versions).map((version) => (\n        <Radio key={version} value={version}>\n          <Stack direction=\"column\" spacing={8} alignItems=\"flex-start\">\n            <SelectIcon name=\"minecraft\" />\n            {version}\n          </Stack>\n        </Radio>\n      ))}\n    </RadioGroup>\n  );\n};\n\nexport const links = () => [{ rel: 'stylesheet', href: styles }, ...selectIconLinks()];\n\nexport default GameVersionSelect;\n", "import React from 'react';\nimport cn from 'classnames';\n\nimport Icon, { IconName } from '../Icon';\nimport styles from './index.css';\n\ntype Props = {\n  name: IconName;\n  size?: 'xs' | 's' | 'l';\n};\n\nconst ICON_COLORS = {\n  minecraft: '#F5F5F5',\n  forge: '#202C44',\n  fabric: '#BADCBA',\n};\n\nconst SelectIcon = ({ name, size }: Props) => (\n  <div\n    className={cn('selectIcon', `selectIcon_size-${size}`)}\n    style={{ background: ICON_COLORS[name] || 'transparent' }}>\n    <Icon name={name} />\n  </div>\n);\n\nexport const links = () => [{ rel: 'stylesheet', href: styles }];\n\nexport default SelectIcon;\n", "import React from 'react';\n\nexport type IconName = 'minecraft' | 'forge' | 'fabric';\n\ntype Props = {\n  name: IconName;\n  height?: number;\n  width?: number;\n};\n\nconst Icon = ({ name, height = 32, width = 32 }: Props) => (\n  <img src={`/icons/${name}.svg`} height={height} width={width} alt={name} />\n);\n\nexport default Icon;\n", "import React from 'react';\nimport { Breadcrumb, Container, Header, Content, CustomProvider } from 'rsuite';\nimport PageIcon from '@rsuite/icons/Page';\nimport Sidebar, { links as sidebarLinks } from '../Sidebar';\n\nimport styles from './index.css';\nimport NavHeader, { links as navHeaderLinks } from '../NavHeader';\n\ntype LayoutProps = {\n  children?: React.ReactChild | React.ReactChild[];\n  pageTitle?: string;\n  path?: string[];\n};\n\nconst Layout = ({ children, pageTitle, path }: LayoutProps) => (\n  <CustomProvider theme=\"light\">\n    <Container>\n      <Sidebar />\n      <Container className=\"layout__container\">\n        <NavHeader />\n        <Header className=\"layout__header\">\n          {path && (\n            <Breadcrumb>\n              {path.map((value) => (\n                <Breadcrumb.Item key={value}>{value}</Breadcrumb.Item>\n              ))}\n            </Breadcrumb>\n          )}\n          {pageTitle && (\n            <h3>\n              <PageIcon style={{ fontSize: '0.8em' }} />\n              {pageTitle}\n            </h3>\n          )}\n        </Header>\n        <Content>{children}</Content>\n      </Container>\n    </Container>\n  </CustomProvider>\n);\n\nexport const links = () => [\n  { rel: 'stylesheet', href: styles },\n  ...sidebarLinks(),\n  ...navHeaderLinks(),\n];\n\nexport default Layout;\n", "import cn from 'classnames';\nimport { Nav, Dropdown, Sidebar as BaseSidebar, Sidenav, Stack } from 'rsuite';\nimport { Gear, HelpOutline, Dashboard, AppSelect } from '@rsuite/icons';\nimport { useNavigate, useLocation } from '@remix-run/react';\nimport Version, { links as versionLinks } from '../Version';\nimport Logo, { links as logoLinks } from '../Logo';\nimport styles from './index.css';\nimport GithubRepo, { links as githubRepoLinks } from '../GithubRepo';\nimport { MOBILE_QUREY } from '~/constants';\nimport { useMediaQuery } from '~/hooks/useMediaQuery';\n\nconst Sidebar = () => {\n  const { pathname } = useLocation();\n  const navigate = useNavigate();\n  const isMobile = useMediaQuery(MOBILE_QUREY);\n\n  const handleSelect = (eventKey: string) => {\n    navigate(`..${eventKey}`, { replace: true });\n  };\n\n  const handleLogoClick = () => {\n    navigate('../', { replace: true });\n  };\n\n  return (\n    <BaseSidebar className={cn('sidebar', { sidebar_mobile: isMobile })}>\n      <Sidenav.Header className=\"sidebar__header\">\n        <div className=\"sidebar__github\">\n          <GithubRepo />\n        </div>\n        <Stack direction=\"column\" spacing={isMobile ? 16 : 32}>\n          <Logo onClick={handleLogoClick} />\n          <Version />\n        </Stack>\n      </Sidenav.Header>\n      <Sidenav\n        expanded={!isMobile}\n        defaultOpenKeys={['/servers', '/settings']}\n        className=\"sidebar__nav\"\n        appearance=\"subtle\">\n        <Sidenav.Body>\n          <Nav activeKey={pathname} onSelect={handleSelect}>\n            <Dropdown\n              eventKey=\"/servers\"\n              title=\"Servers\"\n              icon={<Dashboard />}\n              placement=\"rightStart\">\n              <Dropdown.Item eventKey=\"/servers/create\">Create</Dropdown.Item>\n              <Dropdown.Item eventKey=\"/servers\">List</Dropdown.Item>\n            </Dropdown>\n            <Dropdown\n              eventKey=\"/mods\"\n              title=\"Mods\"\n              disabled\n              icon={<AppSelect />}\n              placement=\"rightStart\">\n              <Dropdown.Item eventKey=\"/mods/gallery\" disabled>\n                Gallery\n              </Dropdown.Item>\n              <Dropdown.Item eventKey=\"/mods/downloaded\" disabled>\n                Downloads\n              </Dropdown.Item>\n            </Dropdown>\n            <Dropdown\n              eventKey=\"/settings\"\n              title=\"Settings\"\n              icon={<Gear />}\n              placement=\"rightStart\">\n              <Dropdown.Item eventKey=\"/settings/rana-mc\">RanaMC</Dropdown.Item>\n              <Dropdown.Item eventKey=\"/settings/curseforge\">CurseForge</Dropdown.Item>\n            </Dropdown>\n            <Nav.Item eventKey=\"/about\" icon={<HelpOutline />}>\n              About\n            </Nav.Item>\n          </Nav>\n        </Sidenav.Body>\n      </Sidenav>\n    </BaseSidebar>\n  );\n};\n\nexport const links = () => [\n  { rel: 'stylesheet', href: styles },\n  ...versionLinks(),\n  ...logoLinks(),\n  ...githubRepoLinks(),\n];\n\nexport default Sidebar;\n", "import cn from 'classnames';\nimport { MOBILE_QUREY } from '~/constants';\nimport { useMediaQuery } from '~/hooks/useMediaQuery';\n\nimport styles from './index.css';\n\nconst Version = () => {\n  const isMobile = useMediaQuery(MOBILE_QUREY);\n\n  const prefix = 'Rana MC: ';\n  const version = 'alpha 0.1.0';\n\n  return (\n    <div className={cn('version', { version_mobile: isMobile })}>\n      {isMobile ? version : `${prefix}${version}`}\n    </div>\n  );\n};\n\nexport const links = () => [{ rel: 'stylesheet', href: styles }];\n\nexport default Version;\n", "import { useState, useEffect } from 'react';\n\n// FIY: Code from:\n// eslint-disable-next-line max-len\n// https://www.netlify.com/blog/2020/12/05/building-a-custom-react-media-query-hook-for-more-responsive-apps/\nexport function useMediaQuery(query: string) {\n  const [matches, setMatches] = useState(false);\n\n  useEffect(() => {\n    const media = window.matchMedia(query);\n    if (media.matches !== matches) {\n      setMatches(media.matches);\n    }\n    const listener = () => {\n      setMatches(media.matches);\n    };\n    media.addEventListener('change', listener);\n    return () => media.removeEventListener('change', listener);\n  }, [matches, query]);\n\n  return matches;\n}\n", "import React from 'react';\nimport styles from './index.css';\n\ntype LogoProps = {\n  onClick?: () => void;\n};\n\nconst Logo = ({ onClick }: LogoProps) => (\n  <div role=\"presentation\" className=\"logo\" onClick={onClick} />\n);\n\nexport const links = () => [\n  {\n    rel: 'preload',\n    href: '/icons/logo.svg',\n    as: 'image',\n    type: 'image/svg+xml',\n  },\n  { rel: 'stylesheet', href: styles },\n];\n\nexport default Logo;\n", "import React from 'react';\nimport styles from './index.css';\n\nconst GithubRepo = () => (\n  // eslint-disable-next-line max-len\n  // eslint-disable-next-line jsx-a11y/control-has-associated-label, jsx-a11y/anchor-has-content\n  <a\n    className=\"githubRepo\"\n    target=\"_blank\"\n    href=\"https://github.com/rana-mc\"\n    rel=\"noreferrer\"\n  />\n);\n\nexport const links = () => [\n  {\n    rel: 'preload',\n    href: '/icons/github.svg',\n    as: 'image',\n    type: 'image/svg+xml',\n  },\n  { rel: 'stylesheet', href: styles },\n];\n\nexport default GithubRepo;\n", "import { Notice, Admin } from '@rsuite/icons';\nimport React from 'react';\nimport { Navbar, Stack, Badge, List, Drawer, Nav, Avatar } from 'rsuite';\nimport { MOBILE_QUREY } from '~/constants';\nimport { useMediaQuery } from '~/hooks/useMediaQuery';\nimport styles from './index.css';\n\n// TODO: Use real notices\nconst NavHeader = () => {\n  const isMobile = useMediaQuery(MOBILE_QUREY);\n  const [open, setOpen] = React.useState(false);\n\n  const handleNoticeSelect = () => {\n    setOpen(true);\n  };\n\n  return (\n    <>\n      <div className=\"navHeader\">\n        <Navbar className=\"navHeader__nav\">\n          <Nav pullRight justified>\n            <Nav.Item onSelect={handleNoticeSelect}>\n              <Badge>\n                <Notice />\n              </Badge>\n            </Nav.Item>\n            <Nav.Item>\n              <Stack spacing={8}>\n                {!isMobile && <span>admin@rana.mc</span>}\n                <Avatar circle size=\"sm\">\n                  <Admin />\n                </Avatar>\n              </Stack>\n            </Nav.Item>\n          </Nav>\n        </Navbar>\n      </div>\n      <Drawer open={open} size=\"xs\" full={isMobile} onClose={() => setOpen(false)}>\n        <Drawer.Body>\n          <List>\n            <List.Item>\n              <Stack spacing={8}>\n                <Badge color=\"yellow\" />\n                Server stopped\n              </Stack>\n            </List.Item>\n            <List.Item>\n              <Stack spacing={8}>\n                <Badge color=\"red\" />\n                Server crashed\n              </Stack>\n            </List.Item>\n            <List.Item>\n              <Stack spacing={8}>\n                <Badge color=\"green\" />\n                Server started\n              </Stack>\n            </List.Item>\n          </List>\n        </Drawer.Body>\n      </Drawer>\n    </>\n  );\n};\n\nexport const links = () => [{ rel: 'stylesheet', href: styles }];\n\nexport default NavHeader;\n", "import { useEffect, useState } from 'react';\nimport { useFetcher } from '@remix-run/react';\nimport { Panel, RadioGroup, Stack, Radio } from 'rsuite';\nimport { ValueType } from 'rsuite/esm/Radio';\nimport SelectIcon, { links as selectIconLinks } from '~/components/SelectIcon';\nimport { getFabricServerUrl } from '../utils';\n\ntype Props = {\n  gameVersionId: string;\n  onBuild: (core: FabricCore) => void;\n};\n\ntype FabricInstallersResponse = { data: FabricInstaller[]; success: boolean };\ntype FabricLoadersResponse = { data: FabricLoader[]; success: boolean };\n\nconst FabricCoreBuilder = ({ gameVersionId, onBuild }: Props) => {\n  const [installer, setInstaller] = useState<FabricInstaller>();\n  const [loader, setLoader] = useState<FabricLoader>();\n\n  const fabricInstallers = useFetcher<FabricInstallersResponse>();\n  const fabricLoaders = useFetcher<FabricLoadersResponse>();\n\n  useEffect(() => {\n    fabricInstallers.submit(null, {\n      action: 'servers/create/api/fabricInstallers',\n      method: 'post',\n    });\n    fabricLoaders.submit(null, {\n      action: 'servers/create/api/fabricLoaders',\n      method: 'post',\n    });\n  }, [gameVersionId]);\n\n  useEffect(() => {\n    if (loader && installer) {\n      const loaderVersion = loader.version;\n      const installerVersion = installer.version;\n      const serverInstallerUrl = getFabricServerUrl(\n        gameVersionId,\n        loaderVersion,\n        installerVersion\n      );\n\n      onBuild({\n        gameVersion: gameVersionId,\n        loader,\n        installer,\n        serverInstallerUrl,\n      });\n    }\n  }, [installer, loader]);\n\n  const handleInstallerChange = (installerVersion: ValueType) => {\n    const selectedInstaller = fabricInstallers.data?.data?.find(\n      (el) => el.version === installerVersion\n    );\n    setInstaller(selectedInstaller);\n  };\n\n  const handleLoaderChange = (loaderVersion: ValueType) => {\n    const selectedLoader = fabricLoaders.data?.data?.find(\n      (el) => el.version === loaderVersion\n    );\n    setLoader(selectedLoader);\n  };\n\n  return (\n    <>\n      <Panel header=\"Fabric Installer Version\">\n        <RadioGroup\n          className=\"fabricInstallerSelect\"\n          inline\n          name=\"fabricInstallerSelect\"\n          onChange={handleInstallerChange}>\n          {fabricInstallers.data?.success &&\n            fabricInstallers.data.data.map((installer) => (\n              <Radio key={installer.version} value={installer.version}>\n                <Stack direction=\"row\" spacing={8} alignItems=\"flex-start\">\n                  <SelectIcon name=\"minecraft\" />\n                  {installer.version}\n                </Stack>\n              </Radio>\n            ))}\n        </RadioGroup>\n      </Panel>\n      <Panel header=\"Fabric Loader Version\">\n        <RadioGroup\n          className=\"fabricLoaderSelect\"\n          inline\n          name=\"fabricLoaderSelect\"\n          onChange={handleLoaderChange}>\n          {fabricLoaders.data?.success &&\n            fabricLoaders.data.data.map((loader) => (\n              <Radio key={loader.version} value={loader.version}>\n                <Stack direction=\"row\" spacing={8} alignItems=\"flex-start\">\n                  <SelectIcon name=\"minecraft\" />\n                  {loader.version}\n                </Stack>\n              </Radio>\n            ))}\n        </RadioGroup>\n      </Panel>\n    </>\n  );\n};\n\nexport const links = () => [...selectIconLinks()];\n\nexport default FabricCoreBuilder;\n", "const FABRIC_LOADERS_URL: string = 'https://meta.fabricmc.net/v2/versions/loader';\n\nexport const getFabricServerUrl = (\n  gameVersionId: string,\n  loaderVersion: string,\n  installerVersion: string\n) => {\n  const serverPath = `${gameVersionId}/${loaderVersion}/${installerVersion}/`;\n  const serverUrl = `${FABRIC_LOADERS_URL}/${serverPath}server/jar`;\n\n  return serverUrl;\n};\n", "import { useEffect } from 'react';\nimport { useFetcher } from '@remix-run/react';\nimport { RadioGroup, Stack, Radio, Panel } from 'rsuite';\nimport { ValueType } from 'rsuite/esm/Radio';\nimport SelectIcon, { links as selectIconLinks } from '~/components/SelectIcon';\n\ntype Props = {\n  gameVersionId: string;\n  onBuild: (core: ForgeCore) => void;\n};\n\ntype ForgeCoresResponse = { data: ForgeCore[]; success: boolean };\n\nconst ForgeCoreBuilder = ({ gameVersionId, onBuild }: Props) => {\n  const forgeCores = useFetcher<ForgeCoresResponse>();\n\n  useEffect(() => {\n    forgeCores.submit(\n      { version: gameVersionId },\n      { action: 'servers/create/api/forgeCores', method: 'post' }\n    );\n  }, [gameVersionId]);\n\n  const handleChange = (value: ValueType) => {\n    const core = forgeCores.data?.data.find((core) => core.coreVersion === value);\n    if (core) onBuild(core);\n  };\n\n  return (\n    <Panel header=\"Forge Core Version\">\n      <RadioGroup\n        className=\"forgeCoreSelect\"\n        inline\n        name=\"forgeCoreSelect\"\n        onChange={handleChange}>\n        {forgeCores.data?.success &&\n          forgeCores.data.data.map((core) => (\n            <Radio key={core.coreVersion} value={core.coreVersion}>\n              <Stack direction=\"row\" spacing={8} alignItems=\"flex-start\">\n                <SelectIcon name=\"minecraft\" />\n                {core.coreVersion}\n              </Stack>\n            </Radio>\n          ))}\n      </RadioGroup>\n    </Panel>\n  );\n};\n\nexport const links = () => [...selectIconLinks()];\n\nexport default ForgeCoreBuilder;\n", "import Fabric from './Fabric';\nimport Forge from './Forge';\nimport styles from './index.css';\n\ntype Props = {\n  gameVersionId?: string;\n  coreTypeId: string;\n  onBuild: (serverCore: ServerCore) => void;\n};\n\nconst ServerCoreBuilder = ({ gameVersionId, coreTypeId, onBuild }: Props) => {\n  const handleForgeBuild = (core: ForgeCore) => onBuild({ type: 'forge', ...core });\n  const handleFabricBuild = (core: FabricCore) => onBuild({ type: 'fabric', ...core });\n\n  if (!gameVersionId) {\n    return null;\n  }\n\n  return (\n    <>\n      {coreTypeId === 'forge' && (\n        <Forge gameVersionId={gameVersionId} onBuild={handleForgeBuild} />\n      )}\n      {coreTypeId === 'fabric' && (\n        <Fabric gameVersionId={gameVersionId} onBuild={handleFabricBuild} />\n      )}\n    </>\n  );\n};\n\nexport const links = () => [{ rel: 'stylesheet', href: styles }];\n\nexport default ServerCoreBuilder;\n", "import React from 'react';\nimport cn from 'classnames';\n\nimport { RadioGroup, Radio } from 'rsuite';\nimport { ValueType } from 'rsuite/esm/Radio';\nimport SelectIcon from '../SelectIcon';\n\nimport { IconName } from '../Icon';\nimport styles from './index.css';\n\ntype ServerCoreTypeProps = {\n  title: string;\n  description: string;\n  icon: IconName;\n  onClick?: () => void;\n  active?: boolean;\n};\n\nconst ServerCoreType = ({\n  title,\n  description,\n  icon,\n  onClick,\n  active,\n}: ServerCoreTypeProps) => {\n  const handleClick = () => onClick && onClick();\n\n  return (\n    <div\n      role=\"presentation\"\n      className={cn('serverCoreType', { serverCoreType_active: active })}\n      onClick={handleClick}>\n      <SelectIcon name={icon} size=\"l\" />\n      <div className=\"serverCoreType__title\">\n        <b>{title}</b>\n      </div>\n      <div className=\"serverCoreType__description\">\n        <span>{description}</span>\n      </div>\n    </div>\n  );\n};\n\nconst SERVER_CORE_TYPES = [\n  {\n    id: 'forge',\n    title: 'Forge',\n    description: 'Popular choice',\n    icon: 'forge',\n  },\n  {\n    id: 'fabric',\n    title: 'Fabric',\n    description: 'Lightweight alternative',\n    icon: 'fabric',\n  },\n];\n\ntype Props = {\n  defaultValue?: string;\n  onChange?: (serverCoreType: string) => void;\n};\n\nconst ServerCoreTypeSelect = ({ defaultValue, onChange }: Props) => {\n  const handleChange = (value: ValueType) => {\n    if (onChange) onChange(value as string);\n  };\n\n  return (\n    <RadioGroup\n      defaultValue={defaultValue}\n      className=\"serverCoreSelect\"\n      inline\n      name=\"serverCoreSelect\"\n      onChange={handleChange}>\n      {SERVER_CORE_TYPES.map((serverCoreType) => (\n        <Radio key={serverCoreType.id} value={serverCoreType.id}>\n          <ServerCoreType\n            title={serverCoreType.title}\n            description={serverCoreType.description}\n            icon={serverCoreType.icon as IconName}\n          />\n        </Radio>\n      ))}\n    </RadioGroup>\n  );\n};\n\nexport const links = () => [{ rel: 'stylesheet', href: styles }];\n\nexport default ServerCoreTypeSelect;\n", "import { Radio, RadioGroup } from 'rsuite';\nimport { RESTRICTED_TYPE_IDS } from '~/constants';\nimport { ValueType } from 'rsuite/esm/Radio';\nimport styles from './index.css';\n\ntype VersionType = { id: number; gameId: number; name: string; slug: string };\n\ntype Props = {\n  // TODO: Use only one type\n  defaultValue?: string | number | undefined;\n  versionTypes: VersionType[];\n  onChange?: (versionTypeId: number) => void;\n};\n\nconst filterVersionTypes = (versionTypes: VersionType[]) => {\n  return versionTypes.filter((version) => !RESTRICTED_TYPE_IDS.includes(version.id));\n};\n\nconst formatVersionTypeName = (name: string) => name.replace(/Minecraft/gm, '');\n\nconst VersionTypeSelect = ({ defaultValue, versionTypes, onChange }: Props) => {\n  const handleChange = (value: ValueType) => {\n    if (onChange) onChange(value as number);\n  };\n\n  return (\n    <RadioGroup\n      defaultValue={defaultValue}\n      className=\"versionTypeSelect\"\n      name=\"version\"\n      inline\n      appearance=\"picker\"\n      onChange={handleChange}>\n      {filterVersionTypes(versionTypes).map((version) => (\n        <Radio key={version.id} value={version.id}>\n          {formatVersionTypeName(version.name)}\n        </Radio>\n      ))}\n    </RadioGroup>\n  );\n};\n\nexport const links = () => [{ rel: 'stylesheet', href: styles }];\n\nexport default VersionTypeSelect;\n", "import { useState } from 'react';\nimport { Button, ButtonToolbar, Panel, Form } from 'rsuite';\nimport { useLoaderData, useSubmit, useTransition } from '@remix-run/react';\nimport axios from 'axios';\n// TODO: WTF?\n// eslint-disable-next-line import/no-extraneous-dependencies\nimport { DataFunctionArgs } from '@remix-run/server-runtime';\nimport Layout, { links as layoutLinks } from '~/components/Layout';\n\nconst SETTINGS_API_URL = 'http://localhost:3001/api/settings';\n\nexport const loader = async () => {\n  const response = await axios.get(SETTINGS_API_URL);\n  return response.data;\n};\n\nexport const action = async ({ request }: DataFunctionArgs) => {\n  const body = await request.formData();\n  const data = Object.fromEntries(body);\n\n  axios.post(SETTINGS_API_URL, data);\n\n  return null;\n};\n\nconst CurseForgeSettings = () => {\n  const submit = useSubmit();\n  const transition = useTransition();\n\n  const settings = useLoaderData();\n  const [currentSettings, setCurrentSettings] = useState(settings);\n\n  const handleSubmit = (status: boolean, event: React.FormEvent<HTMLFormElement>) => {\n    submit(event.currentTarget, { replace: true });\n  };\n\n  const handleChange = (formValue: Record<string, string>) => {\n    setCurrentSettings(formValue);\n  };\n\n  return (\n    <Layout pageTitle=\"CurseForge Settings\" path={['Home', 'Settings']}>\n      <Panel style={{ backgroundColor: '#fff' }} bordered>\n        <Form\n          formValue={currentSettings}\n          method=\"post\"\n          disabled={transition.state === 'submitting'}\n          onChange={handleChange}\n          onSubmit={handleSubmit}>\n          <Form.Group controlId=\"curseApiKey\">\n            <Form.ControlLabel>API Key</Form.ControlLabel>\n            <Form.Control name=\"curseApiKey\" />\n            <Form.HelpText>API key for requests to core.curseforge.com</Form.HelpText>\n          </Form.Group>\n          <Form.Group>\n            <ButtonToolbar>\n              <Button\n                disabled={transition.state === 'submitting'}\n                type=\"submit\"\n                appearance=\"primary\">\n                Save\n              </Button>\n            </ButtonToolbar>\n          </Form.Group>\n        </Form>\n      </Panel>\n    </Layout>\n  );\n};\n\nexport const meta = () => ({\n  title: 'RanaMC | Settings',\n});\n\nexport const links = () => [...layoutLinks()];\n\nexport default CurseForgeSettings;\n", "import { LoaderFunction, useLoaderData, useSubmit } from '@remix-run/react';\nimport axios from 'axios';\nimport Layout, { links as layoutLinks } from '~/components/Layout';\nimport ServerCardLarge, {\n  links as serverCardLargeLinks,\n} from '~/components/ServerCardLarge';\nimport { ranaSocket, ServerActions, RanaSocketEvents } from '~/vendors/ranaSocketIo';\nimport { useEffect, useState } from 'react';\n\ntype ServerDataResponse = { data: Server; success: boolean };\nexport const loader: LoaderFunction = async ({ params }) => {\n  const { id } = params;\n  try {\n    const response = await axios.get(`http://localhost:3001/api/servers/${id}`);\n    return { success: true, data: response.data };\n  } catch (err) {\n    return { success: false };\n  }\n};\n\nconst Server = () => {\n  const submit = useSubmit();\n  const initialServer = useLoaderData<ServerDataResponse>();\n  const [server, setServer] = useState<Server>();\n\n  useEffect(() => {\n    setServer(initialServer.data);\n  }, [initialServer.data]);\n\n  useEffect(() => {\n    ranaSocket.on(RanaSocketEvents.ServerUpdate, (server: Server) => {\n      setServer(server);\n    });\n  }, []);\n\n  if (!server) {\n    return (\n      <Layout pageTitle=\"Servers\" path={['Servers']}>\n        <div>Oops, something went wrong...</div>\n      </Layout>\n    );\n  }\n\n  const handleInstall = () => {\n    ranaSocket.emit(ServerActions.InstallCore, server);\n  };\n\n  const handleStart = () => {\n    ranaSocket.emit(ServerActions.Start, server);\n  };\n\n  const handleStop = () => {\n    ranaSocket.emit(ServerActions.Stop, server);\n  };\n\n  const handleRemove = () => {\n    submit(null, {\n      method: 'delete',\n      action: `servers/${server.id}/api/remove`,\n    });\n  };\n\n  const handleEulaChange = (value: boolean) => {\n    ranaSocket.emit(ServerActions.Eula, server, value);\n  };\n\n  return (\n    <Layout pageTitle=\"Servers\" path={['Servers']}>\n      <ServerCardLarge\n        server={server}\n        onInstall={handleInstall}\n        onStart={handleStart}\n        onStop={handleStop}\n        onRemove={handleRemove}\n        onEulaChange={handleEulaChange}\n      />\n    </Layout>\n  );\n};\n\nexport const meta = () => ({ title: 'RanaMC | Server' });\n\nexport const links = () => [...layoutLinks(), ...serverCardLargeLinks()];\n\nexport default Server;\n", "import {\n  Panel,\n  Tag,\n  Button,\n  Row,\n  Col,\n  Grid,\n  Toggle,\n  Divider,\n  Stack,\n  ButtonToolbar,\n  PanelGroup,\n} from 'rsuite';\nimport CodeIcon from '@rsuite/icons/Code';\nimport ToolsIcon from '@rsuite/icons/Tools';\nimport AppSelectIcon from '@rsuite/icons/AppSelect';\nimport DocPassIcon from '@rsuite/icons/DocPass';\nimport ServerLogs, { links as serverLogsLinks } from '~/components/ServerLogs';\nimport styles from './index.css';\nimport Badge, { links as badgeLinks } from '../Badge';\nimport { ServerStatus } from '~/vendors/ranaSocketIo';\nimport { MOBILE_QUREY } from '~/constants';\nimport { useMediaQuery } from '~/hooks/useMediaQuery';\n\ntype Props = {\n  server: Server;\n  onInstall: () => void;\n  onStart: () => void;\n  onStop: () => void;\n  onRemove: () => void;\n  onEulaChange: (value: boolean) => void;\n};\n\nconst ServerCardLarge = ({\n  server,\n  onInstall,\n  onStart,\n  onStop,\n  onRemove,\n  onEulaChange,\n}: Props) => {\n  const isMobile = useMediaQuery(MOBILE_QUREY);\n\n  const handleInstall = () => onInstall();\n  const handleStart = () => onStart();\n  const handleStop = () => onStop();\n  const handleRemove = () => onRemove();\n  const handleEulaChange = (value: boolean) => onEulaChange(value);\n\n  return (\n    <PanelGroup style={{ backgroundColor: '#fff' }} accordion bordered>\n      <Panel defaultExpanded collapsible={false}>\n        <Stack justifyContent=\"space-between\" alignItems=\"center\">\n          <Stack alignItems=\"flex-start\" spacing={12}>\n            <h5 className=\"serverCardLarge__header\">{server.name}</h5>\n            <Badge altColor=\"grey\" content={server.id} />\n          </Stack>\n          <Tag size=\"sm\" color=\"cyan\">\n            {server.status}\n          </Tag>\n        </Stack>\n      </Panel>\n      <Grid fluid>\n        <Row>\n          <Col xs={isMobile ? 24 : 12}>\n            <Panel collapsible defaultExpanded>\n              <Stack\n                direction=\"column\"\n                alignItems=\"stretch\"\n                divider={<Divider className=\"serverCardLarge__divider\" />}>\n                <Stack justifyContent=\"space-between\" alignItems=\"center\">\n                  <Stack alignItems=\"center\" spacing={8}>\n                    <CodeIcon />\n                    {server.gameVersion}\n                  </Stack>\n                  <Stack>{server.gameVersion}</Stack>\n                </Stack>\n                <Stack justifyContent=\"space-between\" alignItems=\"center\">\n                  <Stack alignItems=\"center\" spacing={8}>\n                    <ToolsIcon />\n                    <span style={{ textTransform: 'capitalize' }}>\n                      {server.core.type}\n                    </span>\n                  </Stack>\n                  <Stack>...</Stack>\n                </Stack>\n                <Stack justifyContent=\"space-between\" alignItems=\"center\">\n                  <Stack alignItems=\"center\" spacing={8}>\n                    <AppSelectIcon />\n                    Mods\n                  </Stack>\n                  <Stack>{server.mods.length}</Stack>\n                </Stack>\n                <Stack justifyContent=\"space-between\" alignItems=\"center\">\n                  <Stack alignItems=\"center\" spacing={8}>\n                    <DocPassIcon />\n                    EULA\n                  </Stack>\n                  <Stack>\n                    <Toggle defaultChecked={server.eula} onChange={handleEulaChange} />\n                  </Stack>\n                </Stack>\n              </Stack>\n            </Panel>\n            <Panel bodyFill defaultExpanded className=\"serverCardLarge__footer\">\n              <ButtonToolbar>\n                <Stack justifyContent=\"space-between\">\n                  <Button\n                    appearance=\"link\"\n                    color=\"red\"\n                    size=\"md\"\n                    disabled={\n                      !(\n                        server.status === ServerStatus.Created ||\n                        server.status === ServerStatus.Stopped\n                      )\n                    }\n                    onClick={handleRemove}>\n                    {server.status === ServerStatus.Removing ? 'Removing...' : 'Remove'}\n                  </Button>\n                  <Stack spacing={12}>\n                    <Button\n                      appearance=\"link\"\n                      color=\"cyan\"\n                      disabled={\n                        server.status === ServerStatus.CoreInstalled ||\n                        server.status === ServerStatus.CoreInstalling\n                      }\n                      size=\"md\"\n                      onClick={handleInstall}>\n                      {server.status === ServerStatus.CoreInstalling\n                        ? 'Installing...'\n                        : 'Install'}\n                    </Button>\n                    <Button\n                      appearance=\"link\"\n                      color=\"orange\"\n                      disabled={\n                        server.status === ServerStatus.Stopping ||\n                        server.status === ServerStatus.Stopped\n                      }\n                      size=\"md\"\n                      onClick={handleStop}>\n                      {server.status === ServerStatus.Stopping ? 'Stopping...' : 'Stop'}\n                    </Button>\n                    <Button\n                      appearance=\"ghost\"\n                      disabled={\n                        server.status === ServerStatus.Starting ||\n                        server.status === ServerStatus.Started\n                      }\n                      size=\"md\"\n                      onClick={handleStart}>\n                      {server.status === ServerStatus.Starting ? 'Starting...' : 'Start'}\n                    </Button>\n                  </Stack>\n                </Stack>\n              </ButtonToolbar>\n            </Panel>\n          </Col>\n          <Col xs={isMobile ? 24 : 12}>\n            <Panel collapsible defaultExpanded header=\"Logs\">\n              <ServerLogs />\n            </Panel>\n          </Col>\n        </Row>\n      </Grid>\n    </PanelGroup>\n  );\n};\n\nexport const links = () => [\n  { rel: 'stylesheet', href: styles },\n  ...serverLogsLinks(),\n  ...badgeLinks(),\n];\n\nexport default ServerCardLarge;\n", "import { useCallback, useState } from 'react';\nimport debounce from 'lodash.debounce';\nimport styles from './index.css';\n\nimport { ranaSocket } from '~/vendors/ranaSocketIo';\nimport { parseLine, prepareLines } from './utils';\n\nconst UPDATE_LOGS_DELAY = 250;\nconst LAST_LOGS_COUNT = 100;\n\ntype Props = {\n  serverId?: string;\n};\n\nconst ServerLogs = ({ serverId }: Props) => {\n  const fullServerLogs: string[] = [];\n  const [logs, setLogs] = useState<string[]>([]);\n\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  const handleLogAppend = useCallback(\n    debounce(\n      (logsToUpdate) => setLogs(prepareLines(logsToUpdate.slice(-LAST_LOGS_COUNT))),\n      UPDATE_LOGS_DELAY\n    ),\n    []\n  );\n\n  // TODO: Replace with ServerEvents.Logs\n  ranaSocket.on('logs', (logsServerId: string, message: string) => {\n    if (serverId) {\n      if (serverId === logsServerId) {\n        fullServerLogs.push(message);\n        handleLogAppend(fullServerLogs);\n      }\n      return;\n    }\n\n    fullServerLogs.push(message);\n    handleLogAppend(fullServerLogs);\n  });\n\n  const renderLine = (line: string) =>\n    parseLine(line).groups.map((group, index) =>\n      group.name ? (\n        <span key={`${group.name}_${index}`} className={`serverLogs__${group.name}`}>\n          {group.value}\n        </span>\n      ) : (\n        <span key={`${group.name}_${index}`} className=\"serverLogs__line\">\n          {group.value}\n        </span>\n      )\n    );\n\n  return (\n    <div className=\"serverLogs\">\n      {logs.map((log, index) => (\n        <span key={`${log.length}_${index}`} className=\"serverLogs__log\">\n          {renderLine(log)}\n        </span>\n      ))}\n    </div>\n  );\n};\n\nexport const links = () => [{ rel: 'stylesheet', href: styles }];\n\nexport default ServerLogs;\n", "import { io } from 'socket.io-client';\n\nconst SOCKET_URL = 'http://localhost:3001';\nexport const ranaSocket = io(SOCKET_URL);\n\nexport enum ServerActions {\n  InstallCore = 'installCore',\n  Start = 'start',\n  Stop = 'stop',\n  ExecCommand = 'execCommand',\n  RemoveCore = 'removeCore',\n  Clear = 'clear',\n  Eula = 'eula',\n  FlushServers = 'flushServers',\n  RemoveServer = 'removeServer',\n}\n\nexport enum ServerStatus {\n  Created = 'created',\n  CoreInstalling = 'coreInstalling',\n  CoreInstalled = 'coreInstalled',\n  Starting = 'starting',\n  Started = 'started',\n  Stopping = 'stopping',\n  Stopped = 'stopped',\n  Removing = 'removing',\n}\n\nexport enum RanaSocketEvents {\n  ServerUpdate = 'serverUpdate',\n  ClientServerUpdate = 'clientServerUpdate',\n  ServersFlush = 'serversFlush',\n  SocketServersFlush = 'socketServersFlush',\n}\n", "type LightLine = {\n  raw: string;\n  groups: LightGroup[];\n};\n\ntype LightGroup = {\n  name?: string;\n  value: string;\n};\n\nconst NODES = [\n  {\n    name: 'tag',\n    regex: /.+(\\[.+\\])/gm,\n  },\n  {\n    name: 'classname',\n    regex: /((net|org|com)\\/.+)(\\.class)/gm,\n  },\n  {\n    name: 'org',\n    regex: /((net|org|com).+)( |\\$?)/gm,\n  },\n  {\n    name: 'url',\n    regex: /((http).+)( |)/gm,\n  },\n  {\n    name: 'command',\n    regex: /(().+:)/gm,\n  },\n  {\n    name: 'path',\n    regex: /(\\/.+)( |)/gm,\n  },\n];\n\nexport const prepareLines = (logs: string[]) =>\n  logs.reduce((acc: string[], curr: string) => [...acc, ...curr.split('\\n')], []);\n\nexport const parseLine = (line: string) => {\n  const light: LightLine = {\n    raw: line,\n    groups: [],\n  };\n\n  const nodes = NODES.reduce((acc, curr) => {\n    const node = acc.raw.match(curr.regex);\n\n    if (node && node[0]) {\n      const split = acc.raw.split(node[0]);\n\n      acc.groups.push({\n        value: split[0],\n      });\n\n      acc.groups.push({\n        name: curr.name,\n        value: node[0],\n      });\n\n      acc.groups.push({\n        value: split[1],\n      });\n\n      acc.raw = acc.raw.replace(node[0], '');\n    }\n\n    return acc;\n  }, light);\n\n  if (!nodes.groups.length) {\n    nodes.groups.push({\n      value: nodes.raw,\n    });\n  }\n\n  return nodes;\n};\n", "import { Badge as BaseBadge } from 'rsuite';\nimport cn from 'classnames';\nimport { TypeAttributes } from 'rsuite/esm/@types/common';\nimport styles from './index.css';\n\ntype Props = {\n  content: React.ReactNode;\n  color?: TypeAttributes.Color;\n  altColor: 'grey';\n};\n\nconst Badge = ({ content, color, altColor }: Props) => {\n  return (\n    <div className={cn('badge', `badge_${altColor}`)}>\n      <BaseBadge content={content} color={color}></BaseBadge>\n    </div>\n  );\n};\n\nexport const links = () => [{ rel: 'stylesheet', href: styles }];\n\nexport default Badge;\n", "import Layout, { links as layoutLinks } from '~/components/Layout';\n\nconst RanaMCSettings = () => (\n  <Layout pageTitle=\"RanaMC Settings\" path={['Home', 'Settings']} />\n);\n\nexport const meta = () => ({ title: 'RanaMC | Settings' });\n\nexport const links = () => [...layoutLinks()];\n\nexport default RanaMCSettings;\n", "import Layout, { links as layoutLinks } from '~/components/Layout';\n\nconst DownloadedMods = () => <Layout pageTitle=\"Downloaded\" path={['Home', 'Mods']} />;\n\nexport const meta = () => ({ title: 'RanaMC | Mods' });\n\nexport const links = () => [...layoutLinks()];\n\nexport default DownloadedMods;\n", "import { useLoaderData } from '@remix-run/react';\nimport axios from 'axios';\nimport Layout, { links as layoutLinks } from '~/components/Layout';\nimport { Stack } from 'rsuite';\nimport ServerCard, { links as serverCardLinks } from '~/components/ServerCard';\n\nexport const loader = async () => {\n  try {\n    const response = await axios.get('http://localhost:3001/api/servers');\n    return response.data;\n  } catch (err) {\n    // eslint-disable-next-line @typescript-eslint/no-throw-literal\n    if (axios.isAxiosError(err)) throw new Response(err.message, err.response);\n    // eslint-disable-next-line @typescript-eslint/no-throw-literal\n    else throw new Response('Test', { status: 500 });\n  }\n};\n\nconst Servers = () => {\n  const servers = useLoaderData();\n\n  return (\n    <Layout pageTitle=\"Servers\" path={['Home', 'Servers']}>\n      <Stack wrap spacing={24}>\n        {servers?.map((server: Server) => (\n          <ServerCard key={server.id} server={server} />\n        ))}\n      </Stack>\n    </Layout>\n  );\n};\n\nexport const ErrorBoundary = ({ error }: { error: Error }) => (\n  <Layout pageTitle=\"Servers\" path={['Servers']}>\n    <h1>Error</h1>\n    <p>{error.message}</p>\n    <p>The stack trace is:</p>\n    <pre>{error.stack}</pre>\n  </Layout>\n);\n\nexport const meta = () => ({\n  title: 'RanaMC | Servers',\n});\n\nexport const links = () => [...layoutLinks(), ...serverCardLinks()];\n\nexport default Servers;\n", "import { Panel, Toggle, Stack, Tag, Divider, Button } from 'rsuite';\nimport CodeIcon from '@rsuite/icons/Code';\nimport ToolsIcon from '@rsuite/icons/Tools';\nimport AppSelectIcon from '@rsuite/icons/AppSelect';\nimport DocPassIcon from '@rsuite/icons/DocPass';\nimport styles from './index.css';\nimport { useNavigate } from '@remix-run/react';\n\ntype Props = {\n  server: Server;\n};\n\nconst ServerCard = ({ server }: Props) => {\n  const navigate = useNavigate();\n\n  const handleClick = () => {\n    navigate(`/servers/${server.id}`);\n  };\n\n  const handleToggleClick: React.MouseEventHandler<HTMLDivElement> = (event) =>\n    event.stopPropagation();\n\n  return (\n    <Panel\n      role=\"presentation\"\n      onClick={handleClick}\n      className=\"serverCard\"\n      shaded\n      bordered\n      bodyFill>\n      <Panel\n        header={\n          <Stack justifyContent=\"space-between\" alignItems=\"center\">\n            <h5 className=\"serverCard__header\">{server.name}</h5>\n            <Tag size=\"sm\" color=\"cyan\">\n              Created\n            </Tag>\n          </Stack>\n        }>\n        <Stack\n          direction=\"column\"\n          alignItems=\"stretch\"\n          // spacing={16}\n          divider={<Divider className=\"serverCard__divider\" />}>\n          <Stack justifyContent=\"space-between\" alignItems=\"center\">\n            <Stack alignItems=\"center\" spacing={8}>\n              <CodeIcon />\n              Game version\n            </Stack>\n            <Stack>{server.gameVersion}</Stack>\n          </Stack>\n          <Stack justifyContent=\"space-between\" alignItems=\"center\">\n            <Stack alignItems=\"center\" spacing={8}>\n              <ToolsIcon />\n              Forge\n            </Stack>\n            <Stack>123</Stack>\n          </Stack>\n          <Stack justifyContent=\"space-between\" alignItems=\"center\">\n            <Stack alignItems=\"center\" spacing={8}>\n              <AppSelectIcon />\n              Mods\n            </Stack>\n            <Stack>32</Stack>\n          </Stack>\n          <div onClick={handleToggleClick}>\n            <Stack justifyContent=\"space-between\" alignItems=\"center\">\n              <Stack alignItems=\"center\" spacing={8}>\n                <DocPassIcon />\n                EULA\n              </Stack>\n              <Stack>\n                <Toggle />\n              </Stack>\n            </Stack>\n          </div>\n        </Stack>\n      </Panel>\n      <Panel bodyFill className=\"serverCard__footer\">\n        <Stack justifyContent=\"space-between\" alignItems=\"stretch\">\n          <Button appearance=\"link\" size=\"sm\">\n            Go to server\n          </Button>\n          <Button color=\"red\" appearance=\"link\" size=\"sm\">\n            Remove\n          </Button>\n        </Stack>\n      </Panel>\n    </Panel>\n  );\n};\n\nexport const links = () => [{ rel: 'stylesheet', href: styles }];\n\nexport default ServerCard;\n", "import Layout, { links as layoutLinks } from '~/components/Layout';\n\nconst ModsGallery = () => <Layout pageTitle=\"Gallery\" path={['Home', 'Mods']} />;\n\nexport const meta = () => ({ title: 'RanaMC | Mods' });\n\nexport const links = () => [...layoutLinks()];\n\nexport default ModsGallery;\n", "import Layout, { links as layoutLinks } from '~/components/Layout';\n\nconst About = () => <Layout pageTitle=\"About\" path={['Home', 'About']} />;\n\nexport const meta = () => ({ title: 'RanaMC | About' });\n\nexport const links = () => [...layoutLinks()];\n\nexport default About;\n", "import Layout, { links as layoutLinks } from '~/components/Layout';\n\nconst Index = () => (\n  <Layout path={['Home']}>\n    <h3>Welcome to RanaMC!</h3>\n  </Layout>\n);\n\nexport const meta = () => ({\n  title: 'RanaMC | Home',\n});\n\nexport const links = () => [...layoutLinks()];\n\nexport default Index;\n", "export default {'version':'53d489a0','entry':{'module':'/build/entry.client-SDTGFAPB.js','imports':['/build/_shared/chunk-JU46WIKV.js','/build/_shared/chunk-BKLLZ3ZO.js']},'routes':{'root':{'id':'root','parentId':undefined,'path':'','index':undefined,'caseSensitive':undefined,'module':'/build/root-FI567LOC.js','imports':['/build/_shared/chunk-AMX763LT.js'],'hasAction':false,'hasLoader':false,'hasCatchBoundary':true,'hasErrorBoundary':false},'routes/about':{'id':'routes/about','parentId':'root','path':'about','index':undefined,'caseSensitive':undefined,'module':'/build/routes/about-UCQAIHRG.js','imports':['/build/_shared/chunk-Q7H26KYZ.js'],'hasAction':false,'hasLoader':false,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/index':{'id':'routes/index','parentId':'root','path':undefined,'index':true,'caseSensitive':undefined,'module':'/build/routes/index-HQGGGRR5.js','imports':['/build/_shared/chunk-Q7H26KYZ.js'],'hasAction':false,'hasLoader':false,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/mods/downloaded':{'id':'routes/mods/downloaded','parentId':'root','path':'mods/downloaded','index':undefined,'caseSensitive':undefined,'module':'/build/routes/mods/downloaded-ZEXMA6A6.js','imports':['/build/_shared/chunk-Q7H26KYZ.js'],'hasAction':false,'hasLoader':false,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/mods/gallery':{'id':'routes/mods/gallery','parentId':'root','path':'mods/gallery','index':undefined,'caseSensitive':undefined,'module':'/build/routes/mods/gallery-GYIJ74LI.js','imports':['/build/_shared/chunk-Q7H26KYZ.js'],'hasAction':false,'hasLoader':false,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/servers/$id/api/remove':{'id':'routes/servers/$id/api/remove','parentId':'root','path':'servers/:id/api/remove','index':undefined,'caseSensitive':undefined,'module':'/build/routes/servers/$id/api/remove-3GRL5MGG.js','imports':undefined,'hasAction':true,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/servers/$id/index':{'id':'routes/servers/$id/index','parentId':'root','path':'servers/:id','index':true,'caseSensitive':undefined,'module':'/build/routes/servers/$id/index-LOV6H76T.js','imports':['/build/_shared/chunk-OSHXEWHP.js','/build/_shared/chunk-BE4337DZ.js','/build/_shared/chunk-Q7H26KYZ.js'],'hasAction':false,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/servers/create/api/createServer':{'id':'routes/servers/create/api/createServer','parentId':'root','path':'servers/create/api/createServer','index':undefined,'caseSensitive':undefined,'module':'/build/routes/servers/create/api/createServer-DIJK4R7A.js','imports':undefined,'hasAction':true,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/servers/create/api/fabricInstallers':{'id':'routes/servers/create/api/fabricInstallers','parentId':'root','path':'servers/create/api/fabricInstallers','index':undefined,'caseSensitive':undefined,'module':'/build/routes/servers/create/api/fabricInstallers-6PNHCDIV.js','imports':undefined,'hasAction':true,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/servers/create/api/fabricLoaders':{'id':'routes/servers/create/api/fabricLoaders','parentId':'root','path':'servers/create/api/fabricLoaders','index':undefined,'caseSensitive':undefined,'module':'/build/routes/servers/create/api/fabricLoaders-6KTYPVCV.js','imports':undefined,'hasAction':true,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/servers/create/api/forgeCores':{'id':'routes/servers/create/api/forgeCores','parentId':'root','path':'servers/create/api/forgeCores','index':undefined,'caseSensitive':undefined,'module':'/build/routes/servers/create/api/forgeCores-AOLKZV4F.js','imports':undefined,'hasAction':true,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/servers/create/api/gameVersions':{'id':'routes/servers/create/api/gameVersions','parentId':'root','path':'servers/create/api/gameVersions','index':undefined,'caseSensitive':undefined,'module':'/build/routes/servers/create/api/gameVersions-TCZ753JL.js','imports':undefined,'hasAction':true,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/servers/create/index':{'id':'routes/servers/create/index','parentId':'root','path':'servers/create','index':true,'caseSensitive':undefined,'module':'/build/routes/servers/create/index-4P53WVZN.js','imports':['/build/_shared/chunk-BE4337DZ.js','/build/_shared/chunk-Q7H26KYZ.js'],'hasAction':false,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/servers/index':{'id':'routes/servers/index','parentId':'root','path':'servers','index':true,'caseSensitive':undefined,'module':'/build/routes/servers/index-3VQTCMXH.js','imports':['/build/_shared/chunk-OSHXEWHP.js','/build/_shared/chunk-BE4337DZ.js','/build/_shared/chunk-Q7H26KYZ.js'],'hasAction':false,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':true},'routes/settings/curseforge':{'id':'routes/settings/curseforge','parentId':'root','path':'settings/curseforge','index':undefined,'caseSensitive':undefined,'module':'/build/routes/settings/curseforge-QNZA5HQM.js','imports':['/build/_shared/chunk-BE4337DZ.js','/build/_shared/chunk-Q7H26KYZ.js'],'hasAction':true,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/settings/rana-mc':{'id':'routes/settings/rana-mc','parentId':'root','path':'settings/rana-mc','index':undefined,'caseSensitive':undefined,'module':'/build/routes/settings/rana-mc-UYSOTVPT.js','imports':['/build/_shared/chunk-Q7H26KYZ.js'],'hasAction':false,'hasLoader':false,'hasCatchBoundary':false,'hasErrorBoundary':false}},'url':'/build/manifest-53D489A0.js'};", "\nimport * as entryServer from \"/Users/ebykovskikh/Desktop/web/app/entry.server.tsx\";\nimport * as route0 from \"/Users/ebykovskikh/Desktop/web/app/root.tsx\";\nimport * as route1 from \"/Users/ebykovskikh/Desktop/web/app/routes/servers/create/api/fabricInstallers.ts\";\nimport * as route2 from \"/Users/ebykovskikh/Desktop/web/app/routes/servers/create/api/fabricLoaders.ts\";\nimport * as route3 from \"/Users/ebykovskikh/Desktop/web/app/routes/servers/create/api/createServer.ts\";\nimport * as route4 from \"/Users/ebykovskikh/Desktop/web/app/routes/servers/create/api/gameVersions.ts\";\nimport * as route5 from \"/Users/ebykovskikh/Desktop/web/app/routes/servers/create/api/forgeCores.ts\";\nimport * as route6 from \"/Users/ebykovskikh/Desktop/web/app/routes/servers/$id/api/remove.ts\";\nimport * as route7 from \"/Users/ebykovskikh/Desktop/web/app/routes/servers/create/index.tsx\";\nimport * as route8 from \"/Users/ebykovskikh/Desktop/web/app/routes/settings/curseforge.tsx\";\nimport * as route9 from \"/Users/ebykovskikh/Desktop/web/app/routes/servers/$id/index.tsx\";\nimport * as route10 from \"/Users/ebykovskikh/Desktop/web/app/routes/settings/rana-mc.tsx\";\nimport * as route11 from \"/Users/ebykovskikh/Desktop/web/app/routes/mods/downloaded.tsx\";\nimport * as route12 from \"/Users/ebykovskikh/Desktop/web/app/routes/servers/index.tsx\";\nimport * as route13 from \"/Users/ebykovskikh/Desktop/web/app/routes/mods/gallery.tsx\";\nimport * as route14 from \"/Users/ebykovskikh/Desktop/web/app/routes/about.tsx\";\nimport * as route15 from \"/Users/ebykovskikh/Desktop/web/app/routes/index.tsx\";\n  export { default as assets } from \"@remix-run/dev/assets-manifest\";\n  export const entry = { module: entryServer };\n  export const routes = {\n    \"root\": {\n      id: \"root\",\n      parentId: undefined,\n      path: \"\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route0\n    },\n  \"routes/servers/create/api/fabricInstallers\": {\n      id: \"routes/servers/create/api/fabricInstallers\",\n      parentId: \"root\",\n      path: \"servers/create/api/fabricInstallers\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route1\n    },\n  \"routes/servers/create/api/fabricLoaders\": {\n      id: \"routes/servers/create/api/fabricLoaders\",\n      parentId: \"root\",\n      path: \"servers/create/api/fabricLoaders\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route2\n    },\n  \"routes/servers/create/api/createServer\": {\n      id: \"routes/servers/create/api/createServer\",\n      parentId: \"root\",\n      path: \"servers/create/api/createServer\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route3\n    },\n  \"routes/servers/create/api/gameVersions\": {\n      id: \"routes/servers/create/api/gameVersions\",\n      parentId: \"root\",\n      path: \"servers/create/api/gameVersions\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route4\n    },\n  \"routes/servers/create/api/forgeCores\": {\n      id: \"routes/servers/create/api/forgeCores\",\n      parentId: \"root\",\n      path: \"servers/create/api/forgeCores\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route5\n    },\n  \"routes/servers/$id/api/remove\": {\n      id: \"routes/servers/$id/api/remove\",\n      parentId: \"root\",\n      path: \"servers/:id/api/remove\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route6\n    },\n  \"routes/servers/create/index\": {\n      id: \"routes/servers/create/index\",\n      parentId: \"root\",\n      path: \"servers/create\",\n      index: true,\n      caseSensitive: undefined,\n      module: route7\n    },\n  \"routes/settings/curseforge\": {\n      id: \"routes/settings/curseforge\",\n      parentId: \"root\",\n      path: \"settings/curseforge\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route8\n    },\n  \"routes/servers/$id/index\": {\n      id: \"routes/servers/$id/index\",\n      parentId: \"root\",\n      path: \"servers/:id\",\n      index: true,\n      caseSensitive: undefined,\n      module: route9\n    },\n  \"routes/settings/rana-mc\": {\n      id: \"routes/settings/rana-mc\",\n      parentId: \"root\",\n      path: \"settings/rana-mc\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route10\n    },\n  \"routes/mods/downloaded\": {\n      id: \"routes/mods/downloaded\",\n      parentId: \"root\",\n      path: \"mods/downloaded\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route11\n    },\n  \"routes/servers/index\": {\n      id: \"routes/servers/index\",\n      parentId: \"root\",\n      path: \"servers\",\n      index: true,\n      caseSensitive: undefined,\n      module: route12\n    },\n  \"routes/mods/gallery\": {\n      id: \"routes/mods/gallery\",\n      parentId: \"root\",\n      path: \"mods/gallery\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route13\n    },\n  \"routes/about\": {\n      id: \"routes/about\",\n      parentId: \"root\",\n      path: \"about\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route14\n    },\n  \"routes/index\": {\n      id: \"routes/index\",\n      parentId: \"root\",\n      path: undefined,\n      index: true,\n      caseSensitive: undefined,\n      module: route15\n    }\n  };"],
  "mappings": "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",
  "names": []
}
